<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How To on DI Herbert Mühlburger</title>
    <link>https://blog.muehlburger.at/tags/how-to/</link>
    <description>Recent content in How To on DI Herbert Mühlburger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 Nov 2016 10:25:34 +0000</lastBuildDate>
    
	<atom:link href="https://blog.muehlburger.at/tags/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[video] – Knowledge is Power: Getting out of Trouble by Understanding Git</title>
      <link>https://blog.muehlburger.at/2016/11/video-knowledge-is-power-getting-out-of-trouble-by-understanding-git/</link>
      <pubDate>Thu, 17 Nov 2016 10:25:34 +0000</pubDate>
      
      <guid>https://blog.muehlburger.at/2016/11/video-knowledge-is-power-getting-out-of-trouble-by-understanding-git/</guid>
      <description>Have you ever wondered how git works internally or why git does certain things in a certain way? Recently I found an interesting talk about git&amp;rsquo;s internals on https://gotocon.com. It explains all the building blocks that you need to understand to better understand git.
  Knowledge is Power: Getting out of Trouble by Understanding Git</description>
    </item>
    
    <item>
      <title>How to choose a versioning scheme for your software</title>
      <link>https://blog.muehlburger.at/2015/04/how-to-choose-a-versioning-scheme-for-your-software/</link>
      <pubDate>Thu, 16 Apr 2015 13:10:16 +0000</pubDate>
      
      <guid>https://blog.muehlburger.at/2015/04/how-to-choose-a-versioning-scheme-for-your-software/</guid>
      <description>As a developer, there comes the time were you think about how to version your software. One approach is &amp;#8220;Semantic Versioning&amp;#8221; which leverages the level of change on your public API. Depending on what you changed in your code, Semantic Versioning proposes different version numbers:
 Given a version number MAJOR.MINOR.PATCH, increment the:
 MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards-compatible manner, and PATCH version when you make backwards-compatible bug fixes.</description>
    </item>
    
    <item>
      <title>How to mount Novell directory in Ubuntu</title>
      <link>https://blog.muehlburger.at/2014/03/how-to-mount-novell-directory-in-ubuntu/</link>
      <pubDate>Wed, 12 Mar 2014 14:04:18 +0000</pubDate>
      
      <guid>https://blog.muehlburger.at/2014/03/how-to-mount-novell-directory-in-ubuntu/</guid>
      <description>First you have to install ncpfs using apt-get:
[code language=&amp;#8221;bash&amp;#8221;]
sudo apt-get install ncpfs
[/code]
Then mount your novell directories using the following commands:
[code language=&amp;#8221;bash&amp;#8221;]
mkdir /media/novell
sudo chown : /media/novell
sudo ncpmount -S  -A  -U  -u  -g  -o nfsextras,symlinks,tcp,rw /media/novell -p cp850 -y utf8
[/code]
This will mount all of the volumes. If you wish to mount a specific volume use the -V option.</description>
    </item>
    
    <item>
      <title>Enable HTTPS everywhere</title>
      <link>https://blog.muehlburger.at/2014/01/enable-https-everywhere/</link>
      <pubDate>Sun, 05 Jan 2014 15:35:26 +0000</pubDate>
      
      <guid>https://blog.muehlburger.at/2014/01/enable-https-everywhere/</guid>
      <description>[][1]SSL-Report for blog.muehlburger.at Finally I finished to configure my HTTPS protocol support for blog.muehlburger.at. Supporting encrypted communication is an important part of the internet today. Everybody should support encrypted communication on the web. A good resource on how to select strong cypher suites and to configure your web server to support encryption properly is bettercrypto.org.
There is also a great video covering the current state of the art in crypto held by security researchers at 30C3:</description>
    </item>
    
    <item>
      <title>How to install (Oracle) Sun Java SDK 1.6.x (Java 6) on Ubuntu</title>
      <link>https://blog.muehlburger.at/2011/01/how-to-install-oracle-sun-java-sdk-1-6-x-java-6-on-ubuntu/</link>
      <pubDate>Mon, 10 Jan 2011 20:45:32 +0000</pubDate>
      
      <guid>https://blog.muehlburger.at/2011/01/how-to-install-oracle-sun-java-sdk-1-6-x-java-6-on-ubuntu/</guid>
      <description>Dieser Beitrag beschreibt die Installation des Sun Java SDK 1.6.x on Ubuntu (Maverick). The English explanation on how to install Sun Java SDK 1.6.x can be found here.
Canonical-Partner Repositories aktivieren: Dies geschieht unter &amp;#8220;System&amp;#8221; -&amp;gt; &amp;#8220;Systemverwaltung&amp;#8221; -&amp;gt; &amp;#8220;Synaptic Paketverwalung&amp;#8221;. In der Paketverwaltung finden sich die Paketquellen unter dem Menüpunkt &amp;#8220;Einstellungen&amp;#8221;. In den Einstellungen wechselt man auf den Reiter &amp;#8220;Andere Software&amp;#8221; und aktiviert dort &amp;#8220;Canonical-Partner&amp;#8221; bzw. &amp;#8220;Canonical-Partner (Quelltext)&amp;#8221;. Nach dem Klick auf &amp;#8220;Schließen&amp;#8221; werden die Paketlisten neu geladen.</description>
    </item>
    
  </channel>
</rss>