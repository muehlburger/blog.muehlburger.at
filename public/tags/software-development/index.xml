<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Development on DI Herbert Mühlburger</title>
    <link>/tags/software-development/</link>
    <description>Recent content in Software Development on DI Herbert Mühlburger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Apr 2015 13:10:16 +0000</lastBuildDate>
    
	<atom:link href="/tags/software-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to choose a versioning scheme for your software</title>
      <link>/2015/04/how-to-choose-a-versioning-scheme-for-your-software/</link>
      <pubDate>Thu, 16 Apr 2015 13:10:16 +0000</pubDate>
      
      <guid>/2015/04/how-to-choose-a-versioning-scheme-for-your-software/</guid>
      <description>As a developer, there comes the time were you think about how to version your software. One approach is &amp;#8220;Semantic Versioning&amp;#8221; which leverages the level of change on your public API. Depending on what you changed in your code, Semantic Versioning proposes different version numbers:
 Given a version number MAJOR.MINOR.PATCH, increment the:
 MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards-compatible manner, and PATCH version when you make backwards-compatible bug fixes.</description>
    </item>
    
    <item>
      <title>What Most Schools Don’t Teach – Programming</title>
      <link>/2013/03/what-most-schools-dont-teach-programming/</link>
      <pubDate>Mon, 04 Mar 2013 10:27:24 +0000</pubDate>
      
      <guid>/2013/03/what-most-schools-dont-teach-programming/</guid>
      <description>&amp;#8220;The programmers of tomorrow are the wizards of the future. You are going to look like you have magic power, compared to everybody else.&amp;#8221; Diese Aussage beschreibt den Wert, den &amp;#8220;Coding Skills&amp;#8221; heute und in Zukunft haben. Die Fähigkeit Software nach eigenen Vorstellungen zu entwickeln stellt für jeden Bürger eine wichtige Möglichkeit dar das Grundrecht der Freiheit auszuleben.
Das folgende Video beschreibt was &amp;#8220;die meisten Schulen (noch) nicht lehren&amp;#8221; nämlich Software zu entwickeln und Quellcode lesen zu können.</description>
    </item>
    
  </channel>
</rss>